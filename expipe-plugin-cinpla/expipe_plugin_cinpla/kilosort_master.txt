% flag for GPU (must have CUDA libraries installed with compatible MATLAB version)
useGPU = 1;

% data folder path
fpath    = '{}';

% kilosort path (add them permanently in MATLAB by adding in ~/Documents/MATLAB/startup.m)
% addpath(genpath('~/Repositories/KiloSort')) % path to kilosort folder
% addpath(genpath('~/Repositories/npy-matlab')) % path to npy-matlab scripts

% config path
cpath = '{}';

% create channel map file
run(fullfile(cpath, 'kilosort_channelmap.m'));

% Run the configuration file, it builds the structure of options (ops)
run(fullfile(cpath, 'kilosort_config.m'))

% This part runs the normal Kilosort processing on the simulated data
[rez, DATA, uproj] = preprocessData(ops); % preprocess data and extract spikes for initialization
rez                = fitTemplates(rez, DATA, uproj);  % fit templates iteratively
rez                = fullMPMU(rez, DATA);% extract final spike times (overlapping extraction)

% % auto-merge clusters
% rez = merge_posthoc2(rez);

% %Fix merge problems:
% %the automerge function merges similar clusters and then also merges clusters
% %with less than a certain number of spikes and sets their IDs to 0.
% %This ends up misaligning all the similarity values. This code sets this cluster's
% %ids to an empty slot, and shifts the other ids down by 1 to start at 0.
% if(~isequal(rez.st3(:,2),rez.st3(:,5)))
%     %ids are shifted off by one in the merged version
%     %rez.st3(:,5) contains the cluster identities for each spike
%     %shift indexes down 1
%     rez.st3(:,5)=rez.st3(:,5)-1;
%
%     %find empty slots
%     un=unique(rez.st3(:,5));
%     empties=setdiff(1:max(un),un);
%     if isempty(empties), error('why empty?'); end
%     %set cluster that did have id=0 to an empty slot
%     rez.st3(rez.st3(:,5)==-1,5)=empties(1);
% end


% save python results file for Phy
rezToPhy(rez, fpath);
